# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.18)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget gvdb gvdbPTX)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target gvdb
add_library(gvdb SHARED IMPORTED)

set_target_properties(gvdb PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "BUILD_OPENVDB;__TBB_NO_IMPLICIT_LINKAGE;GLEW_STATIC;CUDA_GVDB_COPYDATA_PTX=\"cuda_gvdb_copydata.ptx\";CUDA_GVDB_MODULE_PTX=\"cuda_gvdb_module.ptx\""
  INTERFACE_INCLUDE_DIRECTORIES "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.3/include;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/kernels;C:/Users/mniger/Desktop/vcpkg/installed/x64-windows/include"
  INTERFACE_LINK_LIBRARIES "opengl32;glu32;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.3/lib/x64/cuda.lib"
  INTERFACE_SOURCES "C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/app_perf.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/gvdb.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/gvdb_allocator.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/gvdb_camera.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/gvdb_cutils.cuh;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/gvdb_model.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/gvdb_node.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/gvdb_render.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/gvdb_scene.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/gvdb_types.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/gvdb_vec.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/gvdb_volume_3D.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/gvdb_volume_base.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/gvdb_volume_gvdb.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/loader_ObjarReader.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/loader_OBJReader.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/loader_Parser.h;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/src/string_helper.h"
)

# Create imported target gvdbPTX
add_library(gvdbPTX OBJECT IMPORTED)

set_target_properties(gvdbPTX PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/kernels"
  INTERFACE_SOURCES "C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/kernels/cuda_gvdb.cuh;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/kernels/cuda_gvdb_dda.cuh;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/kernels/cuda_gvdb_geom.cuh;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/kernels/cuda_gvdb_nodes.cuh;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/kernels/cuda_gvdb_operators.cuh;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/kernels/cuda_gvdb_particles.cuh;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/kernels/cuda_gvdb_raycast.cuh;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/kernels/cuda_gvdb_scene.cuh;C:/gvdb-voxels 3/gvdb-voxels 3/source/gvdb_library/kernels/cuda_math.cuh"
)

# Import target "gvdb" for configuration "Debug"
set_property(TARGET gvdb APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(gvdb PROPERTIES
  IMPORTED_IMPLIB_DEBUG "C:/gvdb-voxels 3/build/gvdb_library/Debug/gvdb.lib"
  IMPORTED_LOCATION_DEBUG "C:/gvdb-voxels 3/build/gvdb_library/Debug/gvdb.dll"
  )

# Import target "gvdbPTX" for configuration "Debug"
set_property(TARGET gvdbPTX APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(gvdbPTX PROPERTIES
  IMPORTED_COMMON_LANGUAGE_RUNTIME_DEBUG ""
  IMPORTED_OBJECTS_DEBUG "C:/gvdb-voxels 3/build/gvdb_library/gvdbPTX.dir/Debug/cuda_gvdb_copydata.ptx;C:/gvdb-voxels 3/build/gvdb_library/gvdbPTX.dir/Debug/cuda_gvdb_module.ptx"
  )

# Import target "gvdb" for configuration "Release"
set_property(TARGET gvdb APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(gvdb PROPERTIES
  IMPORTED_IMPLIB_RELEASE "C:/gvdb-voxels 3/build/gvdb_library/Release/gvdb.lib"
  IMPORTED_LOCATION_RELEASE "C:/gvdb-voxels 3/build/gvdb_library/Release/gvdb.dll"
  )

# Import target "gvdbPTX" for configuration "Release"
set_property(TARGET gvdbPTX APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(gvdbPTX PROPERTIES
  IMPORTED_COMMON_LANGUAGE_RUNTIME_RELEASE ""
  IMPORTED_OBJECTS_RELEASE "C:/gvdb-voxels 3/build/gvdb_library/gvdbPTX.dir/Release/cuda_gvdb_copydata.ptx;C:/gvdb-voxels 3/build/gvdb_library/gvdbPTX.dir/Release/cuda_gvdb_module.ptx"
  )

# Import target "gvdb" for configuration "MinSizeRel"
set_property(TARGET gvdb APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)
set_target_properties(gvdb PROPERTIES
  IMPORTED_IMPLIB_MINSIZEREL "C:/gvdb-voxels 3/build/gvdb_library/MinSizeRel/gvdb.lib"
  IMPORTED_LOCATION_MINSIZEREL "C:/gvdb-voxels 3/build/gvdb_library/MinSizeRel/gvdb.dll"
  )

# Import target "gvdbPTX" for configuration "MinSizeRel"
set_property(TARGET gvdbPTX APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)
set_target_properties(gvdbPTX PROPERTIES
  IMPORTED_COMMON_LANGUAGE_RUNTIME_MINSIZEREL ""
  IMPORTED_OBJECTS_MINSIZEREL "C:/gvdb-voxels 3/build/gvdb_library/gvdbPTX.dir/MinSizeRel/cuda_gvdb_copydata.ptx;C:/gvdb-voxels 3/build/gvdb_library/gvdbPTX.dir/MinSizeRel/cuda_gvdb_module.ptx"
  )

# Import target "gvdb" for configuration "RelWithDebInfo"
set_property(TARGET gvdb APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(gvdb PROPERTIES
  IMPORTED_IMPLIB_RELWITHDEBINFO "C:/gvdb-voxels 3/build/gvdb_library/RelWithDebInfo/gvdb.lib"
  IMPORTED_LOCATION_RELWITHDEBINFO "C:/gvdb-voxels 3/build/gvdb_library/RelWithDebInfo/gvdb.dll"
  )

# Import target "gvdbPTX" for configuration "RelWithDebInfo"
set_property(TARGET gvdbPTX APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(gvdbPTX PROPERTIES
  IMPORTED_COMMON_LANGUAGE_RUNTIME_RELWITHDEBINFO ""
  IMPORTED_OBJECTS_RELWITHDEBINFO "C:/gvdb-voxels 3/build/gvdb_library/gvdbPTX.dir/RelWithDebInfo/cuda_gvdb_copydata.ptx;C:/gvdb-voxels 3/build/gvdb_library/gvdbPTX.dir/RelWithDebInfo/cuda_gvdb_module.ptx"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
